Проверяем подключение к кластеру
banshee@ubuntu-1:~$ kubectl get nodes
NAME               STATUS   ROLES           AGE   VERSION
kubeadm-master-1   Ready    control-plane   10d   v1.30.12
kubeadm-master-2   Ready    control-plane   10d   v1.30.12
kubeadm-master-3   Ready    control-plane   10d   v1.30.12
kubeadm-worker-1   Ready    worker          10d   v1.30.12
kubeadm-worker-2   Ready    worker          10d   v1.30.12
banshee@ubuntu-1:~$

Создадим namespace для проекта
banshee@ubuntu-1:~$ kubectl create namespace djangocms
namespace/djangocms created
banshee@ubuntu-1:~$ kubectl get namespace
NAME              STATUS   AGE
default           Active   10d
djangocms         Active   10s
kube-flannel      Active   10d
kube-node-lease   Active   10d
kube-public       Active   10d
kube-system       Active   10d
banshee@ubuntu-1:~$

Пишем манифест для postgres
kubectl apply -f postgres.yaml
kubectl get svc -n djangocms
kubectl get pods -n djangocms

Аналогично пишем манифет django

kubectl port-forward -n djangocms svc/django-cms 8000:8000
nohup kubectl port-forward -n djangocms svc/django-cms 8000:8000 > port-forward.log 2>&1 &
ps aux | grep port-forward
kill <PID>

kubectl exec -it -n djangocms deploy/django-cms -- bash

Остановить (не удаляя)
kubectl scale deployment django-cms --replicas=0 -n djangocms
kubectl scale deployment postgres --replicas=0 -n djangocms
Это просто "усыпит" поды, но оставит всё в кластере: Deployment, Service, PVC, volume.
Запустить снова Сначала база, потом Django.
kubectl scale deployment postgres --replicas=1 -n djangocms
kubectl scale deployment django-cms --replicas=1 -n djangocms

Перезапустить (сброс подов)  Это создаст новые поды, убив старые — удобно при обновлениях образов.
kubectl rollout restart deployment postgres -n djangocms
kubectl rollout restart deployment django-cms -n djangocms

Удалить всё подчистую
Если хочешь прямо снести всё:
kubectl delete deployment postgres django-cms -n djangocms
kubectl delete service postgres django-cms -n djangocms
И если был PersistentVolumeClaim (например, для PostgreSQL), то:
kubectl get pvc -n djangocms
kubectl delete pvc <имя-pvc> -n djangocms


Запустить заново (после удаления)
Если у тебя есть манифесты (postgres.yaml, django-cms.yaml, и т.п.), просто:
или всё вместе:
kubectl apply -f ./